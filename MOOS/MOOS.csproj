<Project Sdk="Microsoft.NET.Sdk">

	<PropertyGroup>
		<OutputType>Exe</OutputType>
		<TargetFramework>net6.0</TargetFramework>
		<AllowUnsafeBlocks>true</AllowUnsafeBlocks>
		<BaseOutputPath>..\bin</BaseOutputPath>

		<Optimize>true</Optimize>
		<ErrorOnDuplicatePublishOutputFiles>false</ErrorOnDuplicatePublishOutputFiles>

		<GenerateAssemblyInfo>false</GenerateAssemblyInfo>
		<GenerateTargetFrameworkAttribute>false</GenerateTargetFrameworkAttribute>
		
		<DefineConstants>Kernel;HasGC;UseAPIC;HasGUI</DefineConstants>

		<IlcSystemModule>MOOS</IlcSystemModule>
		<EntryPointSymbol>Entry</EntryPointSymbol>
		<LinkerSubsystem>NATIVE</LinkerSubsystem>
		<IlcOptimizationPreference>Speed</IlcOptimizationPreference>
	</PropertyGroup>
	
	<!--CustomizeReferences-->
	<Target Name="CustomizeReferences" BeforeTargets="BeforeCompile" AfterTargets="FindReferenceAssembliesForReferences">
		<ItemGroup>
			<ReferencePathWithRefAssemblies Remove="@(ReferencePathWithRefAssemblies)" />
			<ReferencePath Remove="@(ReferencePath)" />
		</ItemGroup>
	</Target>

	<ItemGroup>
		<NativeLibrary Include="$(MSBuildStartupDirectory)\x64\Debug\NativeLib.lib" />
		<NativeLibrary Include="$(MSBuildStartupDirectory)\x64\Debug\LibC.lib" />
		<NativeLibrary Include="$(MSBuildStartupDirectory)\x64\Debug\Doom.lib" />
	</ItemGroup>

	<ItemGroup>
		<LinkerArg Include="/fixed /base:0x10000000 /filealign:0x1000 /map:Kernel.map" />
	</ItemGroup>

	<ItemGroup>
		<PackageReference Include="Microsoft.DotNet.ILCompiler" Version="7.0.0-alpha.1.22074.1" />
	</ItemGroup>

	<Import Project="..\Kernel\Framework.projitems" Label="Shared" />

	<Import Project="..\Corlib\CoreLib.projitems" Label="Shared" />

	<Target Name="BuildISO" AfterTargets="Publish">
		<Exec WorkingDirectory="$(MSBuildStartupDirectory)\Tools\" Command="&quot;$(MSBuildStartupDirectory)\Tools\nasm.exe&quot; -fbin &quot;$(MSBuildStartupDirectory)\Tools\Trampoline.asm&quot; -o &quot;$(MSBuildStartupDirectory)\Tools\Trampoline&quot;"></Exec>
		<Exec WorkingDirectory="$(MSBuildStartupDirectory)\Tools\" Command="&quot;$(MSBuildStartupDirectory)\Tools\nasm.exe&quot; -fbin &quot;$(MSBuildStartupDirectory)\Tools\EntryPoint.asm&quot; -o &quot;$(MSBuildProjectDirectory)\$(NativeOutputPath)Loader&quot;"></Exec>
		<Exec Command="cmd.exe /c copy /b &quot;$(MSBuildProjectDirectory)\$(NativeOutputPath)Loader&quot;+&quot;$(MSBuildProjectDirectory)\$(NativeOutputPath)$(TargetName)$(NativeBinaryExt)&quot; &quot;$(MSBuildStartupDirectory)\Tools\grub2\boot\kernel&quot;"></Exec>
		<Delete Files="&quot;$(MSBuildProjectDirectory)\$(NativeOutputPath)Loader&quot;"></Delete>
		<Exec Command="&quot;$(MSBuildStartupDirectory)\Tools\mkisofs.exe&quot; -relaxed-filenames -J -R -o &quot;$(MSBuildProjectDirectory)\$(NativeOutputPath)$(TargetName).iso&quot; -b boot/grub/i386-pc/eltorito.img -no-emul-boot -boot-load-size 4 -boot-info-table &quot;$(MSBuildStartupDirectory)\Tools\grub2&quot;"></Exec>
	</Target>

	<Target Name="RunQemu" AfterTargets="BuildISO" Condition="$(vm) == 'qemu'">
		<Error Text="Please install QEMU in order to debug MOOS! https://www.qemu.org/download/#windows" Condition="!Exists('C:\Program Files\qemu\qemu-system-x86_64.exe')"></Error>
		<Exec Command="&quot;C:\\Program Files\\qemu\\qemu-system-x86_64.exe&quot; -accel whpx -m 1024 -smp 2 -k en-gb -boot d -cdrom &quot;$(MSBuildProjectDirectory)\$(NativeOutputPath)$(TargetName).iso&quot; -d guest_errors -serial stdio -drive format=raw,id=disk,file=$(MSBuildStartupDirectory)\Tools\grub2\boot\initrd.vhd,if=none -device ahci,id=ahci -device ide-hd,drive=disk,bus=ahci.0 -device AC97 -rtc base=localtime"></Exec>
	</Target>

	<Target Name="RunQemuUSB" AfterTargets="BuildISO" Condition="$(vm) == 'qemuusb'">
		<Error Text="Please install QEMU in order to debug MOOS! https://www.qemu.org/download/#windows" Condition="!Exists('C:\Program Files\qemu\qemu-system-x86_64.exe')"></Error>

		<Exec Command="&quot;C:\\Program Files\\qemu\\qemu-system-x86_64.exe&quot; -accel whpx -m 1024 -smp 2 -k en-gb -boot d -cdrom &quot;$(MSBuildProjectDirectory)\$(NativeOutputPath)$(TargetName).iso&quot; -d guest_errors -serial stdio -drive format=raw,id=disk,file=$(MSBuildStartupDirectory)\Tools\grub2\boot\initrd.vhd,if=none -device ahci,id=ahci -device ide-hd,drive=disk,bus=ahci.0 -device AC97 -rtc base=localtime -device usb-ehci,id=ehci -device usb-kbd,bus=ehci.0 -device usb-mouse,bus=ehci.0"></Exec>
	</Target>

	<Target Name="RunQemuNET" AfterTargets="BuildISO" Condition="$(vm) == 'qemutap'">
		<Error Text="Please install QEMU in order to debug MOOS! https://www.qemu.org/download/#windows" Condition="!Exists('C:\Program Files\qemu\qemu-system-x86_64.exe')"></Error>

		<Exec Command="&quot;C:\\Program Files\\qemu\\qemu-system-x86_64.exe&quot; -accel whpx -m 1024 -smp 2 -k en-gb -boot d -cdrom &quot;$(MSBuildProjectDirectory)\$(NativeOutputPath)$(TargetName).iso&quot; -d guest_errors -serial stdio -drive format=raw,id=disk,file=$(MSBuildStartupDirectory)\Tools\grub2\boot\initrd.vhd,if=none -device ahci,id=ahci -device ide-hd,drive=disk,bus=ahci.0 -device AC97 -rtc base=localtime -net nic,model=e1000 -net tap,ifname=tap"></Exec>
	</Target>
	
	<Target Name="RunVMware" AfterTargets="BuildISO" Condition="$(vm) == 'vmware'">
		<Error Text="Please install VMWare Player in order to Run MOOS!" Condition="!Exists('C:\Program Files (x86)\VMware\VMware Player\vmplayer.exe')And!Exists('C:\Program Files (x86)\VMware\VMware Workstation\vmplayer.exe')"></Error>
		
		<Exec Condition="Exists('C:\Program Files (x86)\VMware\VMware Workstation\vmplayer.exe')" Command="&quot;C:\Program Files (x86)\VMware\VMware Workstation\vmplayer.exe&quot; &quot;$(MSBuildStartupDirectory)\Tools\VMWare\MOOS\MOOS.vmx"></Exec>
		<Exec Condition="Exists('C:\Program Files (x86)\VMware\VMware Player\vmplayer.exe')And!Exists('C:\Program Files (x86)\VMware\VMware Workstation\vmplayer.exe')" Command="&quot;C:\Program Files (x86)\VMware\VMware Player\vmplayer.exe&quot; &quot;$(MSBuildStartupDirectory)\Tools\VMWare\MOOS\MOOS.vmx"></Exec>
	</Target>
	
</Project>